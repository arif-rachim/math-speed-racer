{"version":3,"sources":["comp/App.module.css","comp/Session.js","comp/App.js","index.js","comp/Session.module.css"],"names":["module","exports","Session","onEnd","useContext","AppContext","appContext","setAppContext","useState","initiateState","session","setSession","answers","length","activeRowIndex","setActiveRowIndex","activeColumnIndex","setActiveColumnIndex","delayBetweenQuestionsInMilliseconds","config","containerWidth","setContainerWidth","questions","totalQuestions","useEffect","startNewQuestion","columnsEachRow","delayBetweenColumnsInMilliseconds","playbackRate","isEnd","end","isWaitingForAnswer","numberValue","getValue","onSessionUpdated","waitingForAnswerRef","useRef","onWaitingForAnswer","containerRef","current","offsetWidth","onMounted","onSessionEnd","progress","Math","round","ref","className","styles","container","style","width","position","top","background","height","transition","map","q","rowIndex","n","colIndex","isNegative","data-audio","src","type","fontSize","Answer","onAnswer","answer","durations","Date","getTime","toISOString","buildQuestions","totalSums","questionsEachSum","digits","negativePercentage","sums","number","parseInt","Array","from","_","index","ceil","random","floor","join","hasSimilarItemInQuestions","indexOf","ifTotalIsLesserThanZero","reduce","total","next","push","a","audioKey","audio","document","querySelector","playAudio","delay","Promise","resolve","addEventListener","setTimeout","play","columnIndex","err","start","oldAppContext","oldSession","sessions","filter","s","unfinishedSessions","unfinishedSession","totalAnswers","splice","handleSubmit","event","preventDefault","target","elements","value","onSubmit","answerBox","name","autoFocus","SPEED_RACER_CONFIG","SPEED_RACER_SESSIONS","DEFAULT_CONFIG","onStartSession","setStartSession","React","createContext","App","JSON","parse","localStorage","getItem","stringify","setAppContextPersist","useCallback","functionToCheck","newContext","toString","call","setItem","createAppContextPersist","startSession","Provider","useMemo","HomePage","calculateScore","totalCorrect","t","month","undefined","homePage","button","onClick","date","indexOfCurrentSessionSelection","hasNext","hasPrevious","buttonContainer","buttonPrevNext","disabled","flex","title","score","getDate","getMonth","getFullYear","getHours","getMinutes","tableContainer","table","hasTheAnswer","tdAnswer","textCenter","tot","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a038dc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__UuO5q\",\"score\":\"App_score__3TOys\",\"button\":\"App_button__24jd2\",\"buttonContainer\":\"App_buttonContainer__26OuR\",\"buttonPrevNext\":\"App_buttonPrevNext__8N1I7\",\"table\":\"App_table__Gqo9z\",\"tdAnswer\":\"App_tdAnswer__13p1L\",\"textCenter\":\"App_textCenter__1_IiW\",\"homePage\":\"App_homePage__26Xma\",\"title\":\"App_title__oaCjv\",\"date\":\"App_date__3qQWM\",\"tableContainer\":\"App_tableContainer__7Pf-r\"};","import {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {AppContext} from \"./App\";\r\nimport styles from \"./Session.module.css\";\r\n\r\n\r\nconst onMounted = (containerRef, setContainerWidth) => () => {\r\n    return setContainerWidth(containerRef.current.offsetWidth);\r\n}\r\n\r\nconst onSessionEnd = (isEnd, onEnd) => () => {\r\n    if (isEnd) {\r\n        onEnd();\r\n    }\r\n}\r\n\r\nexport default function Session({onEnd}) {\r\n    const [appContext, setAppContext] = useContext(AppContext);\r\n    const [session, setSession] = useState(initiateState(appContext));\r\n\r\n    const [activeRowIndex, setActiveRowIndex] = useState(session.answers.length);\r\n    const [activeColumnIndex, setActiveColumnIndex] = useState(0);\r\n    const {delayBetweenQuestionsInMilliseconds} = appContext.config;\r\n    const [containerWidth, setContainerWidth] = useState(800);\r\n    let {questions} = session;\r\n    questions = questions || [];\r\n    const totalQuestions = questions && questions[activeRowIndex] && questions[activeRowIndex].length || 0;\r\n    useEffect(() => setActiveColumnIndex(0), [activeRowIndex]);\r\n    useEffect(startNewQuestion({\r\n        activeColumnIndex,\r\n        setActiveColumnIndex,\r\n        columnsEachRow: totalQuestions,\r\n        delayBetweenColumnsInMilliseconds: delayBetweenQuestionsInMilliseconds,\r\n        activeRowIndex,\r\n        playbackRate: appContext.config.playbackRate\r\n    }), [activeColumnIndex,totalQuestions]);\r\n\r\n    const isEnd = session.end.length > 0;\r\n    const isWaitingForAnswer = activeColumnIndex === totalQuestions && !isEnd;\r\n    const numberValue = getValue(questions, activeRowIndex, activeColumnIndex);\r\n    useEffect(onSessionUpdated(setAppContext, session), [session]);\r\n    const waitingForAnswerRef = useRef(null);\r\n    useEffect(onWaitingForAnswer(waitingForAnswerRef, isWaitingForAnswer), [isWaitingForAnswer]);\r\n    const containerRef = useRef();\r\n    useEffect(onMounted(containerRef, setContainerWidth), []);\r\n    useEffect(onSessionEnd(isEnd, onEnd), [isEnd]);\r\n\r\n    const progress = Math.round(((activeRowIndex + 1) / questions.length) * 100);\r\n    return <div ref={containerRef} className={styles.container}>\r\n        <div style={{width: '100%', position: 'absolute', top: 0, background: 'rgba(0,0,0,0.1)'}}>\r\n            <div style={{\r\n                width: `${progress}%`,\r\n                background: 'green',\r\n                height: 10,\r\n                transition: 'width 1000ms ease-in-out'\r\n            }}/>\r\n        </div>\r\n        {questions.map((q, rowIndex) => {\r\n            return <div key={rowIndex}>{q.map((n, colIndex) => {\r\n                const isNegative = n < 0;\r\n                return <div key={`${rowIndex}-${colIndex}`}>\r\n                    <audio data-audio={`${rowIndex}-${colIndex}`}>\r\n                        <source src={`audio/${n}.wav`} type=\"audio/wav\"/>\r\n                        Your browser does not support the audio element.\r\n                    </audio>\r\n                    {isNegative && <audio data-audio={`${rowIndex}-${colIndex}-negative`}>\r\n                        <source src={`audio/1.wav`} type=\"audio/wav\"/>\r\n                        Your browser does not support the audio element.\r\n                    </audio>}\r\n                </div>\r\n            })}</div>\r\n        })}\r\n        <div style={{fontSize: containerWidth * 0.45}}>{numberValue}</div>\r\n        {isWaitingForAnswer && <Answer containerWidth={containerWidth} onAnswer={(answer) => {\r\n            if (answer) {\r\n                setSession(session => {\r\n                    const answers = session['answers'] || [];\r\n                    const durations = session['durations'] || [];\r\n                    answers[activeRowIndex] = answer;\r\n                    durations[activeRowIndex] = new Date().getTime() - waitingForAnswerRef.current.getTime();\r\n                    const isEnd = answers.length === session.questions.length;\r\n                    return {...session, answers, durations, end: isEnd ? new Date().toISOString() : ''};\r\n                })\r\n                setActiveRowIndex(activeRowIndex + 1);\r\n            }\r\n        }}/>}\r\n    </div>\r\n}\r\n\r\nfunction buildQuestions({totalSums, questionsEachSum, digits, negativePercentage}) {\r\n    let sums = [];\r\n    while (sums.length < totalSums) {\r\n        let questions = [];\r\n        while (questions.length < questionsEachSum) {\r\n            let number = parseInt((Array.from({length: digits}).map((_, index) => {\r\n                if (index === 0) {\r\n                    return Math.ceil(Math.random() * 9)\r\n                } else {\r\n                    return Math.floor(Math.random() * 10)\r\n                }\r\n            }).join('')));\r\n\r\n            const isNegative = Math.ceil(Math.random() * 10) <= (10 * negativePercentage);\r\n            number = isNegative ? -1 * number : number;\r\n            const hasSimilarItemInQuestions = questions.indexOf(number) >= 0;\r\n            const ifTotalIsLesserThanZero = questions.reduce((total, next) => total + next, number) <= 0;\r\n            if (!hasSimilarItemInQuestions && !ifTotalIsLesserThanZero) {\r\n                questions.push(number);\r\n            }\r\n        }\r\n        sums.push(questions);\r\n    }\r\n    return sums;\r\n}\r\n\r\n\r\nconst startNewQuestion = ({\r\n                              activeColumnIndex,\r\n                              setActiveColumnIndex,\r\n                              columnsEachRow,\r\n                              delayBetweenColumnsInMilliseconds, activeRowIndex, playbackRate}) => async () => {\r\n    const audioKey = `${activeRowIndex}-${activeColumnIndex}`;\r\n    const audio = document.querySelector(`[data-audio=\"${audioKey}\"]`);\r\n\r\n    if (audio) {\r\n        await playAudio(audio,delayBetweenColumnsInMilliseconds,playbackRate);\r\n        if (activeColumnIndex < columnsEachRow) {\r\n            setActiveColumnIndex(activeColumnIndex + 1);\r\n        }\r\n    } else {\r\n        if (activeColumnIndex < columnsEachRow) {\r\n            setActiveColumnIndex(activeColumnIndex + 1);\r\n        }\r\n    }\r\n}\r\n\r\nconst playAudio = (audio,delay,playbackRate) => {\r\n    return new Promise(resolve => {\r\n        audio.addEventListener('ended', () => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, delay);\r\n        },true);\r\n        audio.playbackRate = playbackRate;\r\n        audio.play();\r\n    });\r\n}\r\n\r\n\r\nconst getValue = (questions, rowIndex, columnIndex) => {\r\n    try {\r\n        return questions[rowIndex][columnIndex]\r\n    } catch (err) {\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst onSessionUpdated = (setAppContext, session) => () => {\r\n    if (session.start) {\r\n        setAppContext(oldAppContext => {\r\n            const oldSession = oldAppContext.sessions.filter(s => s.start !== session.start);\r\n            return {...oldAppContext, sessions: [...oldSession, session]};\r\n        });\r\n\r\n    }\r\n}\r\n\r\nconst onWaitingForAnswer = (waitingForAnswerRef, isWaitingForAnswer) => () => {\r\n    if (isWaitingForAnswer) {\r\n        waitingForAnswerRef.current = new Date();\r\n    }\r\n}\r\n\r\n\r\nconst initiateState = (appContext) => () => {\r\n    const {config, sessions} = appContext;\r\n    // ok now we have the config lets open last session\r\n    const unfinishedSessions = sessions.filter(s => 'end' in s && s.end.length === 0);\r\n    if (unfinishedSessions && unfinishedSessions.length > 0) {\r\n        // we need to replace all un-answered questions here\r\n        const unfinishedSession = unfinishedSessions[0];\r\n        const totalAnswers = unfinishedSession.answers.length;\r\n        const totalQuestions = unfinishedSession.questions.length;\r\n        unfinishedSession.questions.splice(totalAnswers, totalQuestions - totalAnswers, ...buildQuestions({\r\n            ...config,\r\n            totalSums: totalQuestions - totalAnswers\r\n        }));\r\n        return unfinishedSession;\r\n    } else {\r\n        return {\r\n            start: new Date().toISOString(),\r\n            questions: buildQuestions(config),\r\n            answers: [],\r\n            durations: [],\r\n            end: ''\r\n        };\r\n    }\r\n\r\n}\r\n\r\n\r\nconst handleSubmit = (onAnswer) => (event) => {\r\n    event.preventDefault();\r\n    const answer = event.target.elements.answer.value;\r\n    onAnswer(parseInt(answer));\r\n}\r\n\r\nfunction Answer({onAnswer, containerWidth}) {\r\n    return <form onSubmit={handleSubmit(onAnswer)}>\r\n        <input style={{fontSize: containerWidth * 0.3}} className={styles.answerBox} name={\"answer\"} autoFocus={true}/>\r\n    </form>\r\n}","import React, {useCallback, useMemo, useState,useEffect} from \"react\";\r\nimport Session from \"./Session\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst SPEED_RACER_CONFIG = 'speed-racer-config';\r\nconst SPEED_RACER_SESSIONS = 'speed-racer-sessions';\r\n\r\nconst DEFAULT_CONFIG = {\r\n    totalSums: 30,\r\n    questionsEachSum: 4,\r\n    digits: 3,\r\n    negativePercentage: 0,\r\n    delayBetweenQuestionsInMilliseconds: 500,\r\n    playbackRate : 1.2\r\n}\r\n\r\nconst onStartSession = (setStartSession) => () => {\r\n    setStartSession(true);\r\n}\r\n\r\nexport const AppContext = React.createContext({});\r\n\r\nfunction isFunction(functionToCheck) {\r\n    return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n}\r\n\r\nfunction createAppContextPersist(oldAppContext, setAppContext) {\r\n    return (appContext) => {\r\n        let newContext = appContext;\r\n        if (isFunction(appContext)) {\r\n            newContext = appContext(oldAppContext);\r\n        }\r\n        setAppContext(newContext);\r\n        localStorage.setItem(SPEED_RACER_CONFIG,JSON.stringify(newContext.config));\r\n        localStorage.setItem(SPEED_RACER_SESSIONS,JSON.stringify(newContext.sessions));\r\n    }\r\n}\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [appContext, setAppContext] = useState(() => {\r\n        const config = JSON.parse(localStorage.getItem(SPEED_RACER_CONFIG) || JSON.stringify(DEFAULT_CONFIG))\r\n        const sessions = JSON.parse(localStorage.getItem(SPEED_RACER_SESSIONS) || JSON.stringify([]))\r\n        return {config,sessions}\r\n    });\r\n    const setAppContextPersist = useCallback(createAppContextPersist(appContext, setAppContext), [appContext]);\r\n\r\n\r\n    const [startSession, setStartSession] = useState(false);\r\n    return <AppContext.Provider value={useMemo(() => [appContext, setAppContextPersist], [appContext])}>\r\n        <div className={styles.container}>\r\n            {startSession && <Session onEnd={() => setStartSession(false)} />}\r\n            {!startSession && <HomePage setStartSession={setStartSession} appContext={appContext}/>}\r\n        </div>\r\n    </AppContext.Provider>\r\n}\r\n\r\nconst calculateScore = (session) => {\r\n    if(!session || !session.questions){\r\n        return 0;\r\n    }\r\n    let index = 0;\r\n    let totalCorrect = 0;\r\n    for (const question of session.questions) {\r\n        const expectedAnswer = question.reduce((t,n) => t+parseInt(n),0);\r\n        const answer = session.answers[index];\r\n        if(expectedAnswer === answer){\r\n            totalCorrect++;\r\n        }\r\n        index++;\r\n    }\r\n    return Math.round((totalCorrect / session.questions.length) * 100)\r\n}\r\n\r\nconst month = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC'];\r\n\r\nconst formatDate = (date) => {\r\n    return `${date.getDate()}-${month[date.getMonth()]}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\r\n}\r\nfunction HomePage({setStartSession,appContext}){\r\n    const [session,setSession] = useState(appContext?.sessions[appContext.sessions.length - 1]);\r\n    if(session === null || session === undefined){\r\n        return <div className={styles.homePage}><button className={styles.button} onClick={onStartSession(setStartSession)}>Start Session</button></div>\r\n    }\r\n    const indexOfCurrentSessionSelection = appContext.sessions.indexOf(session);\r\n    const hasNext =  indexOfCurrentSessionSelection < appContext.sessions.length - 1;\r\n    const hasPrevious = indexOfCurrentSessionSelection > 0\r\n\r\n    return <div className={styles.homePage}>\r\n\r\n        <div className={styles.buttonContainer}>\r\n            <button className={styles.buttonPrevNext} disabled={!hasPrevious} onClick={() => setSession(appContext.sessions[indexOfCurrentSessionSelection-1])}>Prev Score</button>\r\n            <div style={{flex:1}}/>\r\n            <button className={styles.buttonPrevNext} disabled={!hasNext} onClick={() => setSession(appContext.sessions[indexOfCurrentSessionSelection+1])}>Next Score</button>\r\n        </div>\r\n        <div className={styles.title}>\r\n            <div className={styles.score}>{calculateScore(session)} %</div>\r\n            <div className={styles.date}>{formatDate(new Date(session.start))}</div>\r\n        </div>\r\n        <div className={styles.tableContainer}>\r\n        <table className={styles.table}>\r\n            <thead>\r\n            <tr>\r\n                <th>No</th>\r\n                <th>Questions</th>\r\n                <th>Answers</th>\r\n                <th>Duration</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {session?.questions?.map((q,index) => {\r\n                const hasTheAnswer = session.answers[index] > 0;\r\n                return <tr key={index}>\r\n                    <td>{index+1}</td>\r\n                    <td>{hasTheAnswer ? q.join(',') : '-'}</td>\r\n                    <td className={styles.tdAnswer}>\r\n                        <div className={styles.textCenter} >{session.answers[index] || '-'}</div>\r\n                        /\r\n                        <div className={styles.textCenter}>{session.answers[index]?q.reduce((tot,next) => tot + parseInt(next),0):'-'}</div>\r\n                    </td>\r\n                    <td>{session.durations[index] || '-'}</td>\r\n                </tr>\r\n            })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <button className={styles.button} onClick={onStartSession(setStartSession)}>Start Session</button>\r\n    </div>\r\n}","import ReactDOM from \"react-dom\";\r\nimport App from \"./comp/App\";\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Session_container__1iK6Q\",\"answerBox\":\"Session_answerBox__XlIO6\"};"],"sourceRoot":""}