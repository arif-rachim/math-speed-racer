{"version":3,"sources":["comp/Session.js","comp/App.js","index.js","comp/App.module.css","comp/Session.module.css"],"names":["Session","onEnd","useContext","AppContext","appContext","setAppContext","useState","initiateState","session","setSession","answers","length","activeRowIndex","setActiveRowIndex","activeColumnIndex","setActiveColumnIndex","delayBetweenQuestionsInMilliseconds","config","containerWidth","setContainerWidth","questions","totalQuestions","useEffect","startNewQuestion","columnsEachRow","delayBetweenColumnsInMilliseconds","isEnd","end","isWaitingForAnswer","numberValue","getValue","onSessionUpdated","waitingForAnswerRef","useRef","onWaitingForAnswer","containerRef","current","offsetWidth","onMounted","onSessionEnd","ref","className","styles","container","map","q","rowIndex","n","colIndex","data-audio","src","type","style","fontSize","Answer","onAnswer","answer","durations","Date","getTime","toISOString","buildQuestions","totalSums","questionsEachSum","digits","negativePercentage","sums","number","parseInt","Array","from","_","index","Math","ceil","random","floor","join","hasSimilarItemInQuestions","indexOf","ifTotalIsLesserThanZero","reduce","total","next","push","audio","document","querySelector","addEventListener","setTimeout","playbackRate","play","columnIndex","err","start","oldAppContext","oldSession","sessions","filter","s","unfinishedSessions","handleSubmit","event","preventDefault","target","elements","value","onSubmit","answerBox","name","autoFocus","SPEED_RACER","DEFAULT_CONTEXT","onStartSession","setStartSession","React","createContext","App","JSON","parse","localStorage","getItem","stringify","setAppContextPersist","useCallback","functionToCheck","newContext","toString","call","setItem","createAppContextPersist","startSession","Provider","useMemo","HomePage","calculateScore","totalCorrect","t","round","month","undefined","homePage","button","onClick","date","indexOfCurrentSessionSelection","hasNext","hasPrevious","buttonContainer","buttonPrevNext","disabled","flex","title","score","getDate","getMonth","getFullYear","getHours","getMinutes","tableContainer","table","tdAnswer","textCenter","tot","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cd842fbc.chunk.js","sourcesContent":["import {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {AppContext} from \"./App\";\r\nimport styles from \"./Session.module.css\";\r\n\r\n\r\nconst onMounted = (containerRef, setContainerWidth) => () => {\r\n    return setContainerWidth(containerRef.current.offsetWidth);\r\n}\r\n\r\nconst onSessionEnd = (isEnd, onEnd) => () => {\r\n    if (isEnd) {\r\n        onEnd();\r\n    }\r\n}\r\n\r\nexport default function Session({onEnd}) {\r\n    const [appContext, setAppContext] = useContext(AppContext);\r\n    const [session, setSession] = useState(initiateState(appContext));\r\n\r\n    const [activeRowIndex, setActiveRowIndex] = useState(session.answers.length);\r\n    const [activeColumnIndex, setActiveColumnIndex] = useState(0);\r\n    const {delayBetweenQuestionsInMilliseconds} = appContext.config;\r\n    const [containerWidth, setContainerWidth] = useState(800);\r\n    let {questions} = session;\r\n    questions = questions || [];\r\n    const totalQuestions = questions && questions[activeRowIndex] && questions[activeRowIndex].length || 0;\r\n    useEffect(() => setActiveColumnIndex(0), [activeRowIndex])\r\n    useEffect(startNewQuestion({\r\n        activeColumnIndex,\r\n        setActiveColumnIndex,\r\n        columnsEachRow: totalQuestions,\r\n        delayBetweenColumnsInMilliseconds: delayBetweenQuestionsInMilliseconds,\r\n        activeRowIndex\r\n    }), [activeColumnIndex, totalQuestions]);\r\n    const isEnd = session.end.length > 0;\r\n    const isWaitingForAnswer = activeColumnIndex === totalQuestions && !isEnd;\r\n    const numberValue = getValue(questions, activeRowIndex, activeColumnIndex);\r\n    useEffect(onSessionUpdated(setAppContext, session), [session]);\r\n    const waitingForAnswerRef = useRef(null);\r\n    useEffect(onWaitingForAnswer(waitingForAnswerRef, isWaitingForAnswer), [isWaitingForAnswer]);\r\n    const containerRef = useRef();\r\n    useEffect(onMounted(containerRef, setContainerWidth), []);\r\n    useEffect(onSessionEnd(isEnd,onEnd), [isEnd]);\r\n    return <div ref={containerRef} className={styles.container}>\r\n        {questions.map((q, rowIndex) => {\r\n            return <div key={rowIndex}>{q.map((n, colIndex) => {\r\n                return <audio key={`${rowIndex}-${colIndex}`} data-audio={`${rowIndex}-${colIndex}`} >\r\n                    <source src={`audio/${n}.wav`} type=\"audio/wav\" />\r\n                    Your browser does not support the audio element.\r\n                </audio>\r\n            })}</div>\r\n        })}\r\n        <div style={{fontSize: containerWidth * 0.45}}>{numberValue}</div>\r\n        {isWaitingForAnswer && <Answer containerWidth={containerWidth} onAnswer={(answer) => {\r\n            if (answer) {\r\n                setSession(session => {\r\n                    const answers = session['answers'] || [];\r\n                    const durations = session['durations'] || [];\r\n                    answers[activeRowIndex] = answer;\r\n                    durations[activeRowIndex] = new Date().getTime() - waitingForAnswerRef.current.getTime();\r\n                    const isEnd = answers.length === session.questions.length;\r\n                    return {...session, answers, durations, end: isEnd ? new Date().toISOString() : ''};\r\n                })\r\n                setActiveRowIndex(activeRowIndex + 1);\r\n            }\r\n        }}/>}\r\n    </div>\r\n}\r\n\r\nfunction buildQuestions({totalSums, questionsEachSum, digits, negativePercentage}) {\r\n    let sums = [];\r\n    while (sums.length < totalSums) {\r\n        let questions = [];\r\n        while (questions.length < questionsEachSum) {\r\n            let number = parseInt((Array.from({length: digits}).map((_, index) => {\r\n                if (index === 0) {\r\n                    return Math.ceil(Math.random() * 9)\r\n                } else {\r\n                    return Math.floor(Math.random() * 10)\r\n                }\r\n            }).join('')));\r\n\r\n            const isNegative = Math.ceil(Math.random() * 10) <= (10 * negativePercentage);\r\n            number = isNegative ? -1 * number : number;\r\n            const hasSimilarItemInQuestions = questions.indexOf(number) >= 0;\r\n            const ifTotalIsLesserThanZero = questions.reduce((total, next) => total + next, number) <= 0;\r\n            if (!hasSimilarItemInQuestions && !ifTotalIsLesserThanZero) {\r\n                questions.push(number);\r\n            }\r\n        }\r\n        sums.push(questions);\r\n    }\r\n    return sums;\r\n}\r\n\r\n\r\nconst startNewQuestion = ({\r\n                              activeColumnIndex,\r\n                              setActiveColumnIndex,\r\n                              columnsEachRow,\r\n                              delayBetweenColumnsInMilliseconds, activeRowIndex\r\n                          }) => () => {\r\n    const audio = document.querySelector(`[data-audio=\"${activeRowIndex}-${activeColumnIndex}\"]`);\r\n\r\n    if (audio) {\r\n        audio.addEventListener('ended', () => {\r\n            setTimeout(() => {\r\n                if (activeColumnIndex < columnsEachRow) {\r\n                    setActiveColumnIndex(activeColumnIndex + 1);\r\n                }\r\n            }, delayBetweenColumnsInMilliseconds);\r\n        })\r\n        audio.playbackRate = 1.4;\r\n        audio.play();\r\n    } else {\r\n        if (activeColumnIndex < columnsEachRow) {\r\n            setActiveColumnIndex(activeColumnIndex + 1);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst getValue = (questions, rowIndex, columnIndex) => {\r\n    try {\r\n        return questions[rowIndex][columnIndex]\r\n    } catch (err) {\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst onSessionUpdated = (setAppContext, session) => () => {\r\n    if (session.start) {\r\n        setAppContext(oldAppContext => {\r\n            const oldSession = oldAppContext.sessions.filter(s => s.start !== session.start);\r\n            return {...oldAppContext, sessions: [...oldSession, session]};\r\n        });\r\n\r\n    }\r\n}\r\n\r\nconst onWaitingForAnswer = (waitingForAnswerRef, isWaitingForAnswer) => () => {\r\n    if (isWaitingForAnswer) {\r\n        waitingForAnswerRef.current = new Date();\r\n    }\r\n}\r\n\r\n\r\nconst initiateState = (appContext) => () => {\r\n    const {config, sessions} = appContext;\r\n    // ok now we have the config lets open last session\r\n    const unfinishedSessions = sessions.filter(s => 'end' in s && s.end.length === 0);\r\n    if (unfinishedSessions && unfinishedSessions.length > 0) {\r\n        return unfinishedSessions[0];\r\n    } else {\r\n        return {\r\n            start: new Date().toISOString(),\r\n            questions: buildQuestions(config),\r\n            answers: [],\r\n            durations: [],\r\n            end: ''\r\n        };\r\n    }\r\n\r\n}\r\n\r\n\r\nconst handleSubmit = (onAnswer) => (event) => {\r\n    event.preventDefault();\r\n    const answer = event.target.elements.answer.value;\r\n    onAnswer(parseInt(answer));\r\n}\r\n\r\nfunction Answer({onAnswer, containerWidth}) {\r\n    return <form onSubmit={handleSubmit(onAnswer)}>\r\n        <input style={{fontSize: containerWidth * 0.3}} className={styles.answerBox} name={\"answer\"} autoFocus={true}/>\r\n    </form>\r\n}","import React, {useCallback, useMemo, useState} from \"react\";\r\nimport Session from \"./Session\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst SPEED_RACER = 'SPEED_RACER';\r\nconst DEFAULT_CONTEXT = {\r\n    config: {\r\n        totalSums: 30,\r\n        questionsEachSum: 4,\r\n        digits: 3,\r\n        negativePercentage: 0,\r\n        delayBetweenQuestionsInMilliseconds: 500\r\n    },\r\n    sessions: []\r\n};\r\n\r\nconst onStartSession = (setStartSession) => () => {\r\n    setStartSession(true);\r\n}\r\n\r\nexport const AppContext = React.createContext({});\r\n\r\nfunction isFunction(functionToCheck) {\r\n    return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n}\r\n\r\nfunction createAppContextPersist(oldAppContext, setAppContext) {\r\n    return (appContext) => {\r\n        let newContext = appContext;\r\n        if (isFunction(appContext)) {\r\n            newContext = appContext(oldAppContext);\r\n        }\r\n        setAppContext(newContext);\r\n        localStorage.setItem(SPEED_RACER, JSON.stringify(newContext));\r\n    }\r\n}\r\n\r\nexport default function App() {\r\n\r\n    const [appContext, setAppContext] = useState(JSON.parse(localStorage.getItem(SPEED_RACER) || JSON.stringify(DEFAULT_CONTEXT)));\r\n    const setAppContextPersist = useCallback(createAppContextPersist(appContext, setAppContext), [appContext]);\r\n    const [startSession, setStartSession] = useState(false);\r\n    return <AppContext.Provider value={useMemo(() => [appContext, setAppContextPersist], [appContext])}>\r\n        <div className={styles.container}>\r\n            {startSession && <Session onEnd={() => setStartSession(false)} />}\r\n            {!startSession && <HomePage setStartSession={setStartSession} appContext={appContext}/>}\r\n        </div>\r\n    </AppContext.Provider>\r\n}\r\n\r\nconst calculateScore = (session) => {\r\n    if(!session || !session.questions){\r\n        return 0;\r\n    }\r\n    let index = 0;\r\n    let totalCorrect = 0;\r\n    for (const question of session.questions) {\r\n        const expectedAnswer = question.reduce((t,n) => t+parseInt(n),0);\r\n        const answer = session.answers[index];\r\n        if(expectedAnswer === answer){\r\n            totalCorrect++;\r\n        }\r\n        index++;\r\n    }\r\n    return Math.round((totalCorrect / session.questions.length) * 100)\r\n}\r\n\r\nconst month = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC'];\r\n\r\nconst formatDate = (date) => {\r\n    return `${date.getDate()}-${month[date.getMonth()]}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\r\n}\r\nfunction HomePage({setStartSession,appContext}){\r\n    const [session,setSession] = useState(appContext?.sessions[appContext.sessions.length - 1]);\r\n    if(session === null || session === undefined){\r\n        return <div className={styles.homePage}><button className={styles.button} onClick={onStartSession(setStartSession)}>Start Session</button></div>\r\n    }\r\n    const indexOfCurrentSessionSelection = appContext.sessions.indexOf(session);\r\n    const hasNext =  indexOfCurrentSessionSelection < appContext.sessions.length - 1;\r\n    const hasPrevious = indexOfCurrentSessionSelection > 0\r\n\r\n    return <div className={styles.homePage}>\r\n\r\n        <div className={styles.buttonContainer}>\r\n            <button className={styles.buttonPrevNext} disabled={!hasPrevious} onClick={() => setSession(appContext.sessions[indexOfCurrentSessionSelection-1])}>Prev Score</button>\r\n            <div style={{flex:1}}/>\r\n            <button className={styles.buttonPrevNext} disabled={!hasNext} onClick={() => setSession(appContext.sessions[indexOfCurrentSessionSelection+1])}>Next Score</button>\r\n        </div>\r\n        <div className={styles.title}>\r\n            <div className={styles.score}>{calculateScore(session)} %</div>\r\n            <div className={styles.date}>{formatDate(new Date(session.start))}</div>\r\n        </div>\r\n        <div className={styles.tableContainer}>\r\n        <table className={styles.table}>\r\n            <tr>\r\n                <th>No</th>\r\n                <th>Questions</th>\r\n                <th>Answers</th>\r\n                <th>Duration</th>\r\n            </tr>\r\n            <tbody>\r\n            {session?.questions?.map((q,index) => {\r\n                return <tr key={index}>\r\n                    <td>{index+1}</td>\r\n                    <td>{q.join(',')}</td>\r\n                    <td className={styles.tdAnswer}>\r\n                        <div className={styles.textCenter} >{session.answers[index]}</div>\r\n                        /\r\n                        <div className={styles.textCenter}>{session.answers[index]?q.reduce((tot,next) => tot + parseInt(next),0):''}</div>\r\n                    </td>\r\n                    <td>{session.durations[index]}</td>\r\n                </tr>\r\n            })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <button className={styles.button} onClick={onStartSession(setStartSession)}>Start Session</button>\r\n    </div>\r\n}","import ReactDOM from \"react-dom\";\r\nimport App from \"./comp/App\";\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__UuO5q\",\"score\":\"App_score__3TOys\",\"button\":\"App_button__24jd2\",\"buttonContainer\":\"App_buttonContainer__26OuR\",\"buttonPrevNext\":\"App_buttonPrevNext__8N1I7\",\"table\":\"App_table__Gqo9z\",\"tdAnswer\":\"App_tdAnswer__13p1L\",\"textCenter\":\"App_textCenter__1_IiW\",\"homePage\":\"App_homePage__26Xma\",\"title\":\"App_title__oaCjv\",\"date\":\"App_date__3qQWM\",\"tableContainer\":\"App_tableContainer__7Pf-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Session_container__1iK6Q\",\"answerBox\":\"Session_answerBox__XlIO6\"};"],"sourceRoot":""}